@using Task_Management_Application.Models;
@model IEnumerable<WorkTask>
@{
    ViewBag.Title = "ShowTasks";
    Layout = "~/Views/Shared/_AdministratorLayout.cshtml";
}
<h2 class="text-center">Tasks</h2>
<hr />
@using (Ajax.BeginForm("FilterTasks", "Administrator",
    new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "GET",
        OnFailure = "searchFailed",
        UpdateTargetId = "taskstable"
    }))
{
    <div class="form-group row mb-4">
        <label for="criteria" class="col-form-label col-md-1 font-weight-bold">Criteria</label>
        <select name="criteria" id="criteria" class="form-control col-md-3">
            <option value="All">All</option>
            <option value="Unassigned">Unassigned</option>
            <option value="WaitingForApps">Waiting For Applications</option>
            <option value="Assigned">Assigned</option>
            <option value="Fulfilled">Fulfilled</option>
            <option value="Forfeited">Forfeited</option>
            <option value="Cancelled">Cancelled</option>
            <option value="Unfulfilled">Unfulfilled</option>
            <option value="Individual">Individual</option>
            <option value="Group">Group</option>
        </select>
        <button class="btn btn-default col-md-1 ml-2" id="filterbutton">Filter</button>
        @Html.ActionLink("Reset Criteria", "ShowTasks", null, new {@class= "btn btn-default col-md-2 ml-2" })
    </div>
}

    <table class="table" id="taskstable">
        <thead>
            <tr>
                <th>
                    Title
                </th>
                <th>
                    Status
                </th>
                <th>
                    Deadline
                </th>
                <th>
                    Supervisor
                </th>

                <th>
                    Worker
                </th>
                <th>

                </th>
            </tr>
        </thead>
        <tbody id="assignedbody">
            @foreach (WorkTask task in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(m => task.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(m => task.Status)
                    </td>
                    <td>
                        @{
                            if (task.Status.Equals(TaskStatus.Fulfilled))
                            {
                                <span class="text-success">On time fulfilled</span>
                            }
                            else if (task.Status.Equals(TaskStatus.Forfeited) || task.Status.Equals(TaskStatus.Unfulfilled) || task.Status.Equals(TaskStatus.Cancelled))
                            {
                                <span class="text-danger">The task was not fulfilled</span>
                            }
                            else if (DateTime.Now > task.Deadline)
                            {
                                <span class="text-danger">Time's up</span>
                            }
                            else
                            {
                                @Html.DisplayFor(m => task.Deadline)
                            }
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(m => task.SupervisorUserName)
                    </td>
                    <td>
                        @if(task.Status.Equals(TaskStatus.Unassigned) || task.Status.Equals(TaskStatus.WaitingForApps))
                        {
                            <span>Unassigned task</span>
                        }
                        else if (task.ApplicationUsers.Count == 1)
                        {
                            <span>@task.ApplicationUsers.ElementAt(0).UserName</span>
                        }
                        else
                        {
                            <span>Group task</span>
                        }
                    </td>
                    <td>
                        <button class="btn btn-link btn-sm js-delete" style="font-size: 14px; padding-top:0; padding-bottom: 0" data-task-id="@task.Id">Delete</button>
                        @Html.ActionLink("Show more info", "ShowTask", "Administrator", new { id = task.Id }, null)
                    </td>

                </tr>
            }

        </tbody>
    </table>

    @section Scripts{
        <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
        <script>
            $(document).ready(function () {
                var table = $("#taskstable").DataTable(
                    {
                        "paging": false,
                        "ordering": false,
                        "searching": false,
                        "info": false
                    }
                );
                $("#taskstable .js-delete").on("click", function () {
                    var button = $(this);
                    bootbox.confirm("Are you sure you want to delete this task", function (result) {
                        if (result) {
                            $.ajax({
                                url: "/Administrator/DeleteTask/" + button.attr("data-task-id"),
                                method: "GET",
                                success: function () {
                                    table.row(button.parents("tr")).remove().draw();
                                }
                            })
                        }
                    })
                })
            })

        </script>
    }

