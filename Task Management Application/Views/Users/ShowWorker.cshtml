@using Task_Management_Application.Models;
@model ApplicationUser
@{
    ViewBag.Title = "ShowWorker";
    Layout = ViewBag.Layout;
}

<h2 class="text-center">Worker Record:</h2>
<hr />
<div class=" row mt-4">
    <div class="col-md-6">
        <div class="row form-group">
            <div class="col-md-4 font-weight-bold">
                @Html.DisplayNameFor(model => model.Id)
            </div>

            <div class="col-md-7">
                @Html.DisplayFor(model => model.Id)
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-4 font-weight-bold">
                @Html.DisplayNameFor(model => model.FirstName)
            </div>

            <div class="col-md-7">
                @Html.DisplayFor(model => model.FirstName)
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-4 font-weight-bold">
                @Html.DisplayNameFor(model => model.LastName)
            </div>

            <div class="col-md-7">
                @Html.DisplayFor(model => model.LastName)
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-4 font-weight-bold">
                @Html.DisplayNameFor(model => model.UserName)
            </div>

            <div class="col-md-7">
                @Html.DisplayFor(model => model.UserName)
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-4 font-weight-bold">
                @Html.DisplayNameFor(model => model.Email)
            </div>

            <div class="col-md-7">
                @Html.DisplayFor(model => model.Email)
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-4 font-weight-bold">
                Total Associated Tasks
            </div>
            <div class="col-md-7">
                @Model.Tasks.Count
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-4 font-weight-bold">
                Success Ratio
            </div>
            <div class="col-md-7">
                @{
                    var ratio = (Model.Tasks.FindAll(z => z.Status.Equals(TaskStatus.Fulfilled) && !z.ForfeitedWorkers.Any(w => w.Username.Equals(Model.UserName))).Count) /
                                (((Model.Tasks.FindAll(z => z.Status.Equals(TaskStatus.Fulfilled)).Count + Model.Tasks.FindAll(z => z.Status.Equals(TaskStatus.Unfulfilled)).Count + Model.Tasks.FindAll(z => z.Status.Equals(TaskStatus.Cancelled)).Count) + Model.Tasks.FindAll(z => z.Status.Equals(TaskStatus.Forfeited)).Count) * 1.0);
                }
                <span>@(Math.Round(ratio, 3))</span>
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-11">
                <a href="/@ViewBag.Role/">Back to Dashboard</a>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="row mb-2">
            <div class="col-md-6">
                <h4>Worker Statistics:</h4>
            </div>
        </div>

        <div class="row form-group">
            <div class="col-md-4 font-weight-bold">
                Total Applications
            </div>
            <div class="col-md-7">
                @Model.Tasks.FindAll(z => z.Status.Equals(TaskStatus.WaitingForApps)).Count
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-4 font-weight-bold">
                Total Currently Assigned
            </div>
            <div class="col-md-7">
                @Model.Tasks.FindAll(z => z.Status.Equals(TaskStatus.Assigned)).Count
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-4 font-weight-bold">
                Total Currently Fulfilled
            </div>
            <div class="col-md-7">
                @{
                    var totalf = Model.Tasks.FindAll(z => z.Status.Equals(TaskStatus.Assigned) && z.FinishedWorkers.Any(w => w.Username.Equals(Model.UserName))).Count + Model.Tasks.FindAll(z => z.Status.Equals(TaskStatus.Fulfilled) && !z.ForfeitedWorkers.Any(w => w.Username.Equals(Model.UserName))).Count;
                }
                <span>@totalf</span>
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-4 font-weight-bold">
                Total Currently Unfulfilled
            </div>
            <div class="col-md-7">
                @Model.Tasks.FindAll(z => z.Status.Equals(TaskStatus.Unfulfilled)).Count
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-4 font-weight-bold">
                Total Currently Cancelled
            </div>
            <div class="col-md-7">
                @Model.Tasks.FindAll(z => z.Status.Equals(TaskStatus.Cancelled)).Count
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-4 font-weight-bold">
                Total Currently Forfeited
            </div>
            <div class="col-md-7">
                @{
                    var totalfor = Model.Tasks.FindAll(z => z.Status.Equals(TaskStatus.Assigned) && z.ForfeitedWorkers.Any(w => w.Username.Equals(Model.UserName))).Count + Model.Tasks.FindAll(z => z.Status.Equals(TaskStatus.Forfeited)).Count + Model.Tasks.FindAll(z => z.Status.Equals(TaskStatus.Fulfilled) && z.ForfeitedWorkers.Any(w => w.Username.Equals(Model.UserName))).Count;
                }
                <span>@totalfor</span>
            </div>
        </div>

    </div>
</div>

@if (!User.IsInRole("Worker"))
{
    <div class=" row mt-4">
        @if (User.IsInRole("Administrator") && Model.Tasks.Count==0)
        {
            <div class="col-md-5 mb-3">
                @Html.ActionLink("Delete Worker", "DeleteUser", "Administrator", new { id = Model.Id }, new { @class = "btn btn-primary w-100" })
            </div>
        }
        @if (ViewBag.Message != null)
        {
            <div class="row form-group">
                <div class="col-md-11 offset-1 text-center text-danger">
                    @ViewBag.Message
                </div>
            </div>
        }
        <div class="col-md-12">
            <h3>Worker's Tasks</h3>
            <hr />
            @using (Ajax.BeginForm("FilterTasks", "Users",
                new AjaxOptions
                {
                    InsertionMode = InsertionMode.Replace,
                    HttpMethod = "GET",
                    OnFailure = "searchFailed",
                    UpdateTargetId = "usertaskstable"
                }))
            {
                <div class="form-group row mb-4">
                    <label for="criteria" class="col-form-label col-md-1 font-weight-bold">Criteria</label>
                    <select name="criteria" id="criteria" class="form-control col-md-3">
                        <option value="All">All</option>
                        <option value="WaitingForApps">Waiting For Applications</option>
                        <option value="Assigned">Assigned</option>
                        <option value="Fulfilled">Fulfilled</option>
                        <option value="Forfeited">Forfeited</option>
                        <option value="Cancelled">Cancelled</option>
                        <option value="Unfulfilled">Unfulfilled</option>
                        <option value="Individual">Individual</option>
                        <option value="Group">Group</option>
                    </select>
                    <input type="hidden" name="id" value="@Model.Id" />
                    <input type="hidden" name="role" value="@ViewBag.Role" />
                    <button class="btn btn-default col-md-1 ml-2" id="filterbutton">Filter</button>
                </div>
            }
            <table class="table" id="usertaskstable">
                <thead>
                    <tr>
                        <th>
                            Title
                        </th>
                        <th>
                            Status
                        </th>
                        <th>
                            Deadline
                        </th>
                        <th>
                            Supervisor
                        </th>
                        <th>

                        </th>
                    </tr>
                </thead>
                <tbody id="assignedbody">
                    @foreach (WorkTask task in Model.Tasks)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(m => task.Title)
                            </td>
                            <td>
                                @Html.DisplayFor(m => task.Status)
                            </td>
                            <td>
                                @{
                                    if (task.Status.Equals(TaskStatus.Fulfilled))
                                    {
                                        <span class="text-success">On time fulfilled</span>
                                    }
                                    else if (task.Status.Equals(TaskStatus.Forfeited) || task.Status.Equals(TaskStatus.Unfulfilled) || task.Status.Equals(TaskStatus.Cancelled))
                                    {
                                        <span class="text-danger">The task was not fulfilled</span>
                                    }
                                    else if (DateTime.Now > task.Deadline)
                                    {
                                        <span class="text-danger">Time's up</span>
                                    }
                                    else
                                    {
                                        @Html.DisplayFor(m => task.Deadline)
                                    }
                                }
                            </td>
                            <td>
                                @Html.DisplayFor(m => task.SupervisorUserName)
                            </td>
                            <td>
                                @if (User.IsInRole("Supervisor"))
                                {
                                    if (User.Identity.Name.Equals(task.SupervisorUserName))
                                    {
                                        <a href="/@ViewBag.Role/ShowTask/@task.Id">Show more info</a>
                                    }
                                    else
                                    {
                                        <span class="text-primary">Further info unavailable</span>
                                    }
                                }
                                else
                                {
                                    <a href="/@ViewBag.Role/ShowTask/@task.Id">Show more info</a>

                                }
                            </td>
                        </tr>
                    }

                </tbody>
            </table>
        </div>



    </div>
}


@section Scripts{
    <script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
    <script>
        $(document).ready(function () {
            var table = $("#usertaskstable").DataTable(
                {
                    "paging": false,
                    "ordering": false,
                    "searching": false,
                    "info": false
                }
            );
        })
    </script>
}

